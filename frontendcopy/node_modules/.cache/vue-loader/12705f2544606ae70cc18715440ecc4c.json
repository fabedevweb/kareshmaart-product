{"remainingRequest":"/Users/fabriceavrila/Desktop/auto-entrepreneur/Mes projets/kareshma/kareshmaart-product/frontendcopy/node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!/Users/fabriceavrila/Desktop/auto-entrepreneur/Mes projets/kareshma/kareshmaart-product/frontendcopy/node_modules/cache-loader/dist/cjs.js??ref--1-0!/Users/fabriceavrila/Desktop/auto-entrepreneur/Mes projets/kareshma/kareshmaart-product/frontendcopy/node_modules/vue-loader/lib/index.js??vue-loader-options!/Users/fabriceavrila/Desktop/auto-entrepreneur/Mes projets/kareshma/kareshmaart-product/frontendcopy/src/views/Mentions.vue?vue&type=template&id=29238690&scoped=true&","dependencies":[{"path":"/Users/fabriceavrila/Desktop/auto-entrepreneur/Mes projets/kareshma/kareshmaart-product/frontendcopy/src/views/Mentions.vue","mtime":1659121633066},{"path":"/Users/fabriceavrila/Desktop/auto-entrepreneur/Mes projets/kareshma/kareshmaart-product/frontendcopy/node_modules/cache-loader/dist/cjs.js","mtime":1659079620500},{"path":"/Users/fabriceavrila/Desktop/auto-entrepreneur/Mes projets/kareshma/kareshmaart-product/frontendcopy/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":1659079628947},{"path":"/Users/fabriceavrila/Desktop/auto-entrepreneur/Mes projets/kareshma/kareshmaart-product/frontendcopy/node_modules/cache-loader/dist/cjs.js","mtime":1659079620500},{"path":"/Users/fabriceavrila/Desktop/auto-entrepreneur/Mes projets/kareshma/kareshmaart-product/frontendcopy/node_modules/vue-loader/lib/index.js","mtime":1659079628945}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"}]}